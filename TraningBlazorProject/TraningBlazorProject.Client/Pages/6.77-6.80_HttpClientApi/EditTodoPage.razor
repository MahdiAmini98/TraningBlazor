@page "/edit-todo/{id:int}"
@using System.Text.Json
@inject HttpClient Http
@inject NavigationManager Navigation
@rendermode InteractiveWebAssembly
@attribute [StreamRendering]

<h3>Edit To-Do</h3>


@if (todo == null)
{
    <div class="alert alert-info" role="alert">
        <p>Loading...</p>
    </div>
}
else
{
    <EditForm Model="todo" class="mt-3" OnValidSubmit="UpdateTodo" >
        <div class="mb-3">
            <label for="title" class="form-label">Title</label>
            <InputText id="title" class="form-control" @bind-Value="todo.Title" />
        </div>
        <div class="form-check mb-3">
            <InputCheckbox id="isCompleted" class="form-check-input" @bind-Value="todo.IsCompleted" />
            <label for="isCompleted" class="form-check-label">Is Completed</label>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick=Cancel>Cancel</button>

    </EditForm>
}



@code {
    [Parameter]
    public int id { get; set; }


    private TodoEditDto? todo;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync($"https://localhost:7800/api/Todo/{id}");
        if (response.IsSuccessStatusCode)
        {
            var jsonResponse = await response.Content.ReadAsStringAsync();

            todo = JsonSerializer.Deserialize<TodoEditDto>(jsonResponse,
            new JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true,
                });

        }
        else
        {
            Console.WriteLine(response.StatusCode);
        }
    }


    private async Task UpdateTodo()
    {
        var jsonContent = JsonSerializer.Serialize(todo);

        var httpContent = new StringContent(jsonContent, Encoding.UTF8, "application/json");

        var requestUri = $"https://localhost:7800/api/Todo/{id}";
        var response = await Http.PutAsync(requestUri, httpContent);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("todos");
        }
        else
        {
            Console.WriteLine(response.StatusCode);
        }

    }

    private void Cancel()
    {
        Navigation.NavigateTo("/todos");
    }

    private record TodoEditDto
    {
        public int Id { get; set; }
        [Required]
        public string Title { get; set; } = string.Empty;
        public bool IsCompleted { get; set; }
    }
}
