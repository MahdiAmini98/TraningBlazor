@page "/NamedHttpClientPatternEditTodoPage/{id:int}"
@using TraningBlazorProject.Client.Services.TodoServices
@inject HttpClient Http
@inject NavigationManager Navigation
@rendermode InteractiveWebAssembly
@attribute [StreamRendering]
@inject ITodoService TodoService


<h3>Edit To-Do</h3>


@if (todo == null)
{
    <div class="alert alert-info" role="alert">
        <p>Loading...</p>
    </div>
}
else
{
    <EditForm Model="todo" class="mt-3" OnValidSubmit="UpdateTodo">
        <div class="mb-3">
            <label for="title" class="form-label">Title</label>
            <InputText id="title" class="form-control" @bind-Value="todo.Title" />
        </div>
        <div class="form-check mb-3">
            <InputCheckbox id="isCompleted" class="form-check-input" @bind-Value="todo.IsCompleted" />
            <label for="isCompleted" class="form-check-label">Is Completed</label>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick=Cancel>Cancel</button>

    </EditForm>
}



@code {
    [Parameter]
    public int id { get; set; }


    private Todo? todo;

    protected override async Task OnInitializedAsync()
    {
        todo = await TodoService.GetTodoByIdAsync(id);
    }


    private async Task UpdateTodo()
    {
        await TodoService.UpdateTodoAsync(id, todo);
        Navigation.NavigateTo("NamedHttpClientPatternListTodos");

    }

    private void Cancel()
    {
        Navigation.NavigateTo("/NamedHttpClientPatternListTodos");
    }

}
